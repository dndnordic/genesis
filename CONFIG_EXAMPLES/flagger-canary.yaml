apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: origin-api
  namespace: origin-system
spec:
  # Deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: origin-api
  # Service mesh provider
  provider: istio
  # Service mesh gateway (optional)
  service:
    # Service port number
    port: 8000
    # Container port number
    targetPort: 8000
    # Istio gateways (optional)
    gateways:
    - mesh
    # Istio virtual service host names (optional)
    hosts:
    - origin-api.origin-system.svc.cluster.local
  # Define the canary analysis timing and thresholds
  analysis:
    # Schedule interval (default 60s)
    interval: 1m
    # Max number of failed checks before rollback
    threshold: 5
    # Max traffic percentage routed to canary
    maxWeight: 50
    # Canary increment step
    stepWeight: 10
    # Prometheus metrics
    metrics:
    - name: request-success-rate
      # Minimum req success rate (non 5xx responses)
      # percentage (0-100)
      thresholdRange:
        min: 99
      interval: 1m
    - name: request-duration
      # Maximum req duration P99
      # milliseconds
      thresholdRange:
        max: 500
      interval: 1m
    # Tests that run during canary analysis
    webhooks:
      - name: acceptance-test
        type: pre-rollout
        url: http://flagger-loadtester.origin-system/
        timeout: 30s
        metadata:
          type: bash
          cmd: "curl -s http://origin-api-canary.origin-system:8000/health | grep OK"
      - name: load-test
        url: http://flagger-loadtester.origin-system/
        timeout: 5s
        metadata:
          type: cmd
          cmd: "hey -z 1m -q 10 -c 2 http://origin-api-canary.origin-system:8000/"
          logCmdOutput: "true"
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: singularity-api
  namespace: singularity-system
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: singularity-api
  provider: istio
  service:
    port: 8000
    targetPort: 8000
    gateways:
    - mesh
    hosts:
    - singularity-api.singularity-system.svc.cluster.local
  analysis:
    interval: 1m
    threshold: 5
    maxWeight: 50
    stepWeight: 10
    metrics:
    - name: request-success-rate
      thresholdRange:
        min: 99
      interval: 1m
    - name: request-duration
      thresholdRange:
        max: 500
      interval: 1m
    webhooks:
      - name: acceptance-test
        type: pre-rollout
        url: http://flagger-loadtester.singularity-system/
        timeout: 30s
        metadata:
          type: bash
          cmd: "curl -s http://singularity-api-canary.singularity-system:8000/health | grep OK"
      - name: load-test
        url: http://flagger-loadtester.singularity-system/
        timeout: 5s
        metadata:
          type: cmd
          cmd: "hey -z 1m -q 10 -c 2 http://singularity-api-canary.singularity-system:8000/"
          logCmdOutput: "true"